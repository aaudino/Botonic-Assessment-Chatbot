intent: OOP[E]

samples:
  - Unlimited number.
  - As many as you want so long as they have different parameters.
  - There is no limit to the number of constructors in a class because like functions, constructors can be overloaded.
  - In C++, the constructor can be overloaded in that there can be more than one constructor for a class, each having different parameters.
  - any number you want
  - by default just one, but they may be overloaded to create as many constructors as necessary
  - as many as you want
  - As many as you want, with different parameters.
  - infinite
  - as many as you need
  - As many as are needed, depending on how many variables one wishes to directly modify or leave as default when instantiating an object.
  - A very large amount of constructors can be created for any given class through overloading.  When two constructors with a different type or number of parameters are created, they - are said to be overloaded, and C++ can recognize which constructor to use based on the type of the variables that are passed/returned.
  - Theoretically unlimited, as long as they are defined by the programmer.
  - As many as needed.
  - as many as wanted/needed
  - several
  - countless
  - There can be infinite constructors as long as the signature is different.
  - you can overload constructors as you need
  - As many as the programmer wants to create.
  - as many as you want, as long as they each have a unique argument list
  - as many as the user decides to use.
  - unlimited
  - as much as needed
  - no limitations
  - as much as the user wants and needs
  - as many as wanted by the programmer
  - as many as needed by the programmer
  - unlimited constructors can be defined
